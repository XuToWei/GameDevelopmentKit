
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;

namespace Game.Hot.Editor
{

public sealed class DRAsteroid :  Luban.EditorBeanBase 
{
    public DRAsteroid()
    {
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["Id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["MaxHP"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  MaxHP = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["Attack"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Attack = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["Speed"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Speed = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["AngularSpeed"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  AngularSpeed = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["DeadEffectId"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  DeadEffectId = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["DeadSoundId"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  DeadSoundId = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["Id"] = new JSONNumber(Id);
        }
        {
            _json["MaxHP"] = new JSONNumber(MaxHP);
        }
        {
            _json["Attack"] = new JSONNumber(Attack);
        }
        {
            _json["Speed"] = new JSONNumber(Speed);
        }
        {
            _json["AngularSpeed"] = new JSONNumber(AngularSpeed);
        }
        {
            _json["DeadEffectId"] = new JSONNumber(DeadEffectId);
        }
        {
            _json["DeadSoundId"] = new JSONNumber(DeadSoundId);
        }
    }

    public static DRAsteroid LoadJsonDRAsteroid(SimpleJSON.JSONNode _json)
    {
        DRAsteroid obj = new DRAsteroid();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDRAsteroid(DRAsteroid _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 小行星编号
    /// </summary>
    public int Id;

    /// <summary>
    /// 最大生命
    /// </summary>
    public int MaxHP;

    /// <summary>
    /// 冲击力
    /// </summary>
    public int Attack;

    /// <summary>
    /// 速度
    /// </summary>
    public float Speed;

    /// <summary>
    /// 角速度
    /// </summary>
    public float AngularSpeed;

    /// <summary>
    /// 死亡特效编号
    /// </summary>
    public int DeadEffectId;

    /// <summary>
    /// 死亡声音编号
    /// </summary>
    public int DeadSoundId;

}

}

